{
	"info": {
		"_postman_id": "30e528d2-b41e-4f09-baf5-94d21d342fdd",
		"name": "Pet_Store",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "26298041"
	},
	"item": [
		{
			"name": "Create a new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							"pm.test(\"Entire responce Data is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.code).to.eql(200);",
							"    pm.expect(jsonData.type).to.eql(\"unknown\");",
							"    pm.expect(jsonData.message).to.eql(\"ok\");",
							"});",
							"",
							"pm.test(\"Header is correct\", function () {",
							"    pm.response.to.have.header(\"Content-Type\", \"application/json\");",
							"    pm.response.to.have.header(\"Transfer-Encoding\", \"chunked\");",
							"    pm.response.to.have.header(\"Connection\", \"keep-alive\");",
							"    pm.response.to.have.header(\"Access-Control-Allow-Origin\", \"*\");",
							"    pm.response.to.have.header(\"Access-Control-Allow-Methods\", \"GET, POST, DELETE, PUT\");",
							"    pm.response.to.have.header(\"Access-Control-Allow-Headers\", \"Content-Type, api_key, Authorization\");",
							"",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\n    {\n        \"id\": 77,\n        \"username\": \"fake123\",\n        \"firstName\": \"Fske\",\n        \"lastName\": \"Faker\",\n        \"email\": \"fake@gmail.com\",\n        \"password\": \"fake1234\",\n        \"phone\": \"09090909\",\n        \"userStatus\": 0\n    }\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/user/createWithArray",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user",
						"createWithArray"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check a new user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Your test name\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.id).to.eql(77);",
							"    pm.expect(jsonData.username).to.eql(\"fake123\");",
							"     pm.expect(jsonData.email).to.eql(\"fake@gmail.com\");",
							"});",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response size is less than 600ms\", function () {",
							"    pm.expect(pm.response.responseSize).to.be.below(600);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/user/fake123",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user",
						"fake123"
					]
				}
			},
			"response": []
		},
		{
			"name": "New Request",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"code\": 200,\n    \"type\": \"unknown\",\n    \"message\": \"fake123\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://petstore.swagger.io/v2/user/fake123",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user",
						"fake123"
					]
				}
			},
			"response": []
		},
		{
			"name": "Check a deleted user",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Entire responce Data is correct\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.code).to.eql(1);",
							"    pm.expect(jsonData.type).to.eql(\"error\");",
							"    pm.expect(jsonData.message).to.eql(\"User not found\");",
							"});",
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://petstore.swagger.io/v2/user/fake123",
					"protocol": "https",
					"host": [
						"petstore",
						"swagger",
						"io"
					],
					"path": [
						"v2",
						"user",
						"fake123"
					]
				}
			},
			"response": []
		}
	]
}